# Code generated by kickr; DO NOT EDIT.

name: Deployment
run-name: Deployment

on:
  workflow_dispatch:
    inputs:
      release:
        description: Release job run mode.
        type: choice
        options:
          - dry-run
          - none
          - release
        default: release

concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  run-workflow:
    name: Run
    runs-on: ubuntu-latest
    permissions:
      actions: read
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - id: conclusion
        uses: actions/github-script@ed597411d8f924073f98dfc5c65a23a2325f34cd # v8.0.0
        with:
          result-encoding: string
          script: |-
            const { data } = await github.rest.actions.listWorkflowRuns({
              branch: process.env.GITHUB_REF_NAME,
              owner: context.repo.owner,
              page: 1,
              per_page: 1,
              repo: context.repo.repo,
              workflow_id: process.env.WORKFLOW_ID,
            })

            const latest = data.workflow_runs.at(0)
            if (!latest) {
              throw new Error(`No '${process.env.WORKFLOW_ID}' workflow runs found on ref name '${process.env.GITHUB_REF_NAME}'`)
            }
            console.log(latest)
            return latest.conclusion
        env:
          WORKFLOW_ID: integration.yml
      - if: ${{ steps.conclusion.outputs.result != 'success' }}
        run: |-
          echo "Latest '$WORKFLOW_ID' workflow on '$GITHUB_REF_NAME' isn't in success conclusion: '$WORKFLOW_CONCLUSION'" && exit 1
        env:
          WORKFLOW_CONCLUSION: ${{ steps.conclusion.outputs.result }}
          WORKFLOW_ID: integration.yml

  version:
    name: Version
    runs-on: ubuntu-latest
    needs: run-workflow
    outputs:
      version: ${{ steps.version.outputs.version }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: none
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semrel_version
        uses: cycjimmy/semantic-release-action@ba330626c4750c19d8299de843f05c7aa5574f62 # v5.0.2
        with:
          dry_run: true
          # renovate: datasource=github-tags packageName=semantic-release/semantic-release depName=semantic-release
          semantic_version: v24.2.7
          extra_plugins: |-
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            semantic-release-license
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: version
        run: |-
          if [ -n "$SEMREL_INFO_NEXT_VERSION" ]; then
            echo "version=v${SEMREL_INFO_NEXT_VERSION#v}" >> $GITHUB_OUTPUT
          else
            DESCRIBE=$(git describe --tags || echo "v0.0.0")
            echo "version=v${DESCRIBE#v}" >> $GITHUB_OUTPUT
          fi
        env:
          SEMREL_INFO_NEXT_VERSION: ${{ steps.semrel_version.outputs.new_release_version }}
      - run: echo ${VERSION}
        env:
          VERSION: ${{ steps.version.outputs.version }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: ${{ inputs.release != 'none' && github.ref_protected }}
    needs:
      - version
    environment:
      name: release
      url: ${{ steps.environment_url.outputs.environment_url }}
    permissions:
      contents: write
      issues: write
      pull-requests: write
      id-token: none
    steps:
      # https://docs.stepsecurity.io/harden-runner/workflow-runs
      # https://github.com/marketplace/actions/harden-runner
      - uses: step-security/harden-runner@f4a75cfd619ee5ce8d5b864b0d183aff3c69b55a # v2.13.1
        with:
          disable-sudo-and-containers: true
          egress-policy: audit
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0
        with:
          fetch-depth: 0
      # https://github.com/marketplace/actions/action-for-semantic-release
      - id: semrel_version
        uses: cycjimmy/semantic-release-action@ba330626c4750c19d8299de843f05c7aa5574f62 # v5.0.2
        with:
          dry_run: ${{ inputs.release != 'release' }}
          # renovate: datasource=github-tags packageName=semantic-release/semantic-release depName=semantic-release
          semantic_version: v24.2.7
          extra_plugins: |-
            @semantic-release/changelog
            @semantic-release/commit-analyzer
            @semantic-release/exec
            @semantic-release/git
            @semantic-release/github
            @semantic-release/release-notes-generator
            conventional-changelog-conventionalcommits
            semantic-release-license
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - id: environment_url
        if: ${{ inputs.release == 'release' && steps.semrel_version.outputs.new_release_published == 'true' }}
        run: |-
          [ -z "$VERSION" ] || echo "environment_url=${GITHUB_SERVER_URL}/${GITHUB_REPOSITORY}/releases/tag/v${VERSION#v}" >> $GITHUB_OUTPUT
        env:
          VERSION: ${{ steps.semrel_version.outputs.new_release_version }}
